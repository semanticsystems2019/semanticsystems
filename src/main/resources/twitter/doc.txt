Tweet: hasdate,
 hasID,
  hasLikes,
   hasRetweets,
    hasText,
         hasUser, refersTo, hasSource (static-twitter)
User: hasName, hasId, 
Text: hasEmotion




###### search ###
PREFIX movies: <http://www.semanticweb.org/raphael/ontologies/2019/10/untitled-ontology-2#>
PREFIX spif: <http://spinrdf.org/spif#>

# Example query returning RDF data
SELECT * {
	# Triple patterns for accessing each row and the columns in contains
	# Note that no triples will be generated for NULL values in the table
	# You should inspect your data in Refine mode and add OPTIONAL accordingly
	?row a movies:Tweet ;
		movies:__-_id ?id ;
		movies:__-_text ?text ;
		movies:__-_lang ?lang ;
		movies:__-_source ?source ;
		movies:__-_created_at ?created_at ;
		movies:__-_retweet_count ?retweet_count ;
		movies:__-_favorite_count ?favorite_count ;
		movies:__-_in_reply_to_user_id ?in_reply_to_user_id ;
		movies:__-_in_reply_to_status_id ?in_reply_to_status_id ;
		movies:__-_in_reply_to_user_id_str ?in_reply_to_user_id_str ;
		movies:__-_in_reply_to_screen_name ?in_reply_to_screen_name ;
		movies:__-_user_-_id ?user_id ;
		movies:__-_user_-_screen_name ?user_name .
} LIMIT 100


###### generate ###
PREFIX movies: <http://www.semanticweb.org/raphael/ontologies/2019/10/untitled-ontology-2#>
PREFIX spif: <http://spinrdf.org/spif#>
PREFIX movie: <http://data.linkedmdb.org/resource/movie/>

# Example RDF transformation using the custom IRIs and type
CONSTRUCT {
	?tweet a movies:Tweet ;
    	movies:hasId ?id ;
		movies:hasText ?text ;
    	movies:hasUser ?user.
    ?user a movies:User ;
      	movies:hasName ?user_name ;
  		movies:hasId ?user_id .
} WHERE {
	# Triple patterns for accessing each row and the columns in contains
	# Note that no triples will be generated for NULL values in the table
	# You should inspect your data in Refine mode and add OPTIONAL accordingly
	?tweet a movies:Tweet ;
		movies:__-_id ?id ;
		movies:__-_text ?text ;
		movies:__-_lang ?lang ;
		movies:__-_source ?source ;
		movies:__-_created_at ?created_at ;
		movies:__-_retweet_count ?retweet_count ;
		movies:__-_favorite_count ?favorite_count ;
		movies:__-_in_reply_to_user_id ?in_reply_to_user_id ;
		movies:__-_in_reply_to_status_id ?in_reply_to_status_id ;
		movies:__-_in_reply_to_user_id_str ?in_reply_to_user_id_str ;
		movies:__-_in_reply_to_screen_name ?in_reply_to_screen_name ;
		movies:__-_user_-_id ?user_id ;
		movies:__-_user_-_screen_name ?user_name .
	# Example construction of new IRIs for each row
#	BIND(IRI(spif:buildString("http://www.semanticweb.org/raphael/ontologies/2019/10/untitled-ontology-2#Tweet{?1}", ENCODE_FOR_URI(?id))) AS ?tweetID)
  	
} LIMIT 100